import useSortedFilteredRecipes from '../../hooks/useSortedFilteredRecipes';
import { useEffect, useRef, useState } from 'react';
import RecipesApi from '../../entities/recipes/RecipesApi';
import { useNavigate } from 'react-router';
import IconStar from '../../shared/ui/FavoriteIcon/IconStar';
import UserApi from '../../entities/user/UserApi';
import './MainPage.css';

function MainPage({ user, myUser, setUser }) {
  const [recipes, setRecipes] = useState([]); // –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã
  const [recommendedRecipes, setRecommendedRecipes] = useState([]); // 10 —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
  const [page, setPage] = useState(1);
  const [loading, setLoading] = useState(false);
  const [noMore, setNoMore] = useState(false);
  const [sortType, setSortType] = useState('');
  const [filter, setFilter] = useState('');
  const [sortDropdownOpen, setSortDropdownOpen] = useState(false);
  const sortRef = useRef(null);
  const scrollRef = useRef(null);
  const navigate = useNavigate();

  /* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫–æ–ª–µ—Å–∏–∫–æ–º –º—ã—à–∏:
     –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –±–ª–æ–∫ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
     –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –∫–æ–ª–µ—Å–æ –º—ã—à–∏ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ,
     —Å–æ–∑–¥–∞–≤–∞—è smooth UX –±–µ–∑ –ø–æ—è–≤–ª–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞ */
  useEffect(() => {
    if (recommendedRecipes.length === 0) return;

    const el = scrollRef.current;
    if (!el) return;

    const handleWheel = e => {
      if (e.deltaY !== 0) {
        e.preventDefault(); // –æ—Ç–º–µ–Ω—è–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        el.scrollLeft += e.deltaY; // –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
      }
    };

    el.addEventListener('wheel', handleWheel, { passive: false });

    return () => el.removeEventListener('wheel', handleWheel);
  }, [recommendedRecipes]);

  /* –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã */
  const sortedRecipes = useSortedFilteredRecipes(recipes, sortType, filter);

  /* –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –ë–î —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö (–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö) —Ä–µ—Ü–µ–ø—Ç–æ–≤ */
  useEffect(() => {
    async function getPopularRecipes() {
      try {
        const data = await RecipesApi.getRandomRecipes();

        if (data.statusCode === 200) {
          setRecommendedRecipes(data.data);
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:', error.message);
      }
    }
    getPopularRecipes();
  }, []);

  /* –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ */
  useEffect(() => {
    async function getInitialRecipes() {
      try {
        setLoading(true);

        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ—Ü–µ–ø—Ç–æ–≤
        const data = await RecipesApi.getPaginated(1);

        if (data.statusCode === 200 && data.data.length > 0) {
          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö
          setRecipes(data.data.slice(0, 9));
          setPage(1);
          if (data.data.length < 9) setNoMore(true);
        } else {
          // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç ‚Äî –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –≤–Ω–µ—à–Ω–µ–≥–æ API
          const loadResponse = await RecipesApi.loadFromApi();

          if (loadResponse.statusCode === 200) {
            // –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            const retry = await RecipesApi.getPaginated(1);
            if (retry.statusCode === 200 && retry.data.length > 0) {
              setRecipes(retry.data.slice(0, 9));
              setPage(1);
              if (retry.data.length < 9) {
                setNoMore(true);
              }
            } else {
              setNoMore(true);
              console.warn(
                '–î–∞–Ω–Ω—ã–µ —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ API'
              );
            }
          } else {
            setNoMore(true);
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ API');
          }
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:', error.message);
      } finally {
        setLoading(false);
      }
    }

    getInitialRecipes();
  }, []);

  /* –ü–∞–≥–∏–Ω–∞—Ü–∏—è: –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ—Ü–µ–ø—Ç–æ–≤ */
  async function loadMoreRecipes() {
    try {
      setLoading(true);
      const nextPage = page + 1;
      let data = await RecipesApi.getPaginated(nextPage);

      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ ‚Äî –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –≤–Ω–µ—à–Ω–µ–≥–æ API
      if (data.statusCode === 200 && data.data.length === 0) {
        console.warn('–†–µ—Ü–µ–ø—Ç–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ API...');
        const loadResult = await RecipesApi.loadFromApi();
        // –ü—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        data = await RecipesApi.getPaginated(nextPage);
      }

      if (data.statusCode === 200) {
        if (data.data.length === 0) {
          setNoMore(true);
        } else {
          setRecipes(prev => [...prev, ...data.data]);
          setPage(nextPage);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥—Ä—É–∑–∫–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤:', error);
    } finally {
      setLoading(false);
    }
  }

  /* –ò–∑–±—Ä–∞–Ω–Ω–æ–µ */
  async function handleFavorite(recipeId, userId) {
    try {
      if (!user) {
        alert(
          '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!'
        );
        return;
      }

      if (!user.favorites) {
        user.favorites = [];
      }

      let response;
      if (user.favorites.includes(recipeId)) {
        response = await UserApi.removeFavorite(recipeId, userId);
      } else {
        response = await UserApi.addFavorite(recipeId, userId);
      }

      if (response.statusCode === 200 || response.statusCode === 201) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        const updatedUser = { ...user };
        if (user.favorites.includes(recipeId)) {
          updatedUser.favorites = updatedUser.favorites.filter(
            id => id !== recipeId
          );
        } else {
          updatedUser.favorites = [...updatedUser.favorites, recipeId];
        }
        setUser(updatedUser);
      } else {
        throw new Error(response.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!');
      console.error(err);
    }
  }

  /* –î–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ñ–æ—Ä–º—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ */
  const SORT_OPTIONS = [
    { value: '', label: '---' },
    { value: 'cookTimeAsc', label: '–í—Ä–µ–º—è ‚Üë' },
    { value: 'cookTimeDesc', label: '–í—Ä–µ–º—è ‚Üì' },
    { value: 'ingredientCountAsc', label: '–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã ‚Üë' },
    { value: 'ingredientCountDesc', label: '–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã ‚Üì' },
  ];

  /* –î–ª—è –∫–ª–∏–∫–æ–≤ –≤–Ω–µ –ø–æ–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ */
  useEffect(() => {
    function handleClickOutside(event) {
      if (sortRef.current && !sortRef.current.contains(event.target)) {
        setSortDropdownOpen(false);
      }
    }

    if (sortDropdownOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [sortDropdownOpen]);

  return (
    <div className='p-8 max-w-l mx-auto'>
      {recommendedRecipes.length > 0 && (
        <div className='mb-12'>
          <h1 className='text-4xl font-semibold text-center text-orange-600 mb-7 tracking-tight'>
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
          </h1>

          {/* –û–ë–ï–†–¢–ö–ê: –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º */}
          <div className='max-w-3xl mx-auto px-3'>
            <div className='overflow-x-auto scrollbar-hide' ref={scrollRef}>
              <div className='flex gap-6 pb-2 min-w-fit'>
                {recommendedRecipes.map(recipe => (
                  <div
                    key={recipe.id}
                    onClick={() => navigate(`/recipes/${recipe.id}`)}
                    className='w-[230px] bg-white border border-orange-200 rounded-xl shadow-md
                    p-3 flex-shrink-0 cursor-pointer
                    hover:shadow-xl hover:border-orange-400 hover:ring-1 hover:ring-orange-200
                    transition-all duration-300'
                  >
                    <img
                      src={recipe.imageUrl}
                      alt={recipe.title}
                      className='w-full h-32 object-cover rounded-md mb-2'
                    />
                    <h3 className='text-base font-semibold text-gray-700 mb-1 text-center line-clamp-2'>
                      {recipe.title}
                    </h3>
                    <p className='text-sm text-gray-500 text-center'>
                      ‚è∞ {recipe.cookTime} –º–∏–Ω ¬∑ ü•ó {recipe.ingredientCount} —à—Ç.
                    </p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <h1 className='text-4xl font-semibold text-center text-orange-600 mb-7 tracking-tight'>
        –†–µ—Ü–µ–ø—Ç—ã
      </h1>

      {/* –§–æ—Ä–º–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
      <div className='mb-10 flex justify-center'>
        <div className='flex flex-col sm:flex-row gap-8 bg-white/80 border border-orange-200 rounded-xl px-6 py-4 shadow-sm hover:shadow-md hover:border-orange-400 hover:ring-2 hover:ring-orange-200 transition-all'>
          {/* –ö–∞—Å—Ç–æ–º–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
          <div className='relative flex flex-col items-center' ref={sortRef}>
            <span className='custom-text text-sm font-medium text-gray-700 mb-2'>
              –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ:
            </span>
            <button
              onClick={() => setSortDropdownOpen(prev => !prev)}
              className='button-reset w-52 h-10 border border-orange-300 rounded-md px-2 text-left text-gray-700 bg-white
             hover:border-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 flex items-center justify-between transition-all cursor-pointer'
            >
              <span className=''>
                {SORT_OPTIONS.find(opt => opt.value === sortType)?.label ||
                  '---'}
              </span>
              <span className='material-symbols-outlined icon-small text-gray-500'>
                {sortDropdownOpen ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}
              </span>
            </button>
            {sortDropdownOpen && (
              <div className='absolute top-full mt-1 w-52 bg-white border border-orange-200 rounded-md shadow z-15'>
                {SORT_OPTIONS.map(option => (
                  <div
                    key={option.value}
                    onClick={() => {
                      setSortType(option.value);
                      setSortDropdownOpen(false);
                    }}
                    className='px-4 py-2 text-sm hover:bg-orange-50 cursor-pointer'
                  >
                    {option.label}
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* –§–∏–ª—å—Ç—Ä */}
          <div className='flex flex-col items-center'>
            <span className='custom-text text-sm font-medium text-gray-700 mb-2'>
              –§–∏–ª—å—Ç—Ä:
            </span>
            <input
              type='text'
              value={filter}
              onChange={e => setFilter(e.target.value)}
              placeholder='–ù–∞–π—Ç–∏ –ø–æ —Å–ª–æ–≤—É'
              className='input-reset w-52 h-10 border border-orange-300 rounded-md px-4 text-left text-gray-700 bg-white 
             hover:border-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 
             transition-all cursor-pointer'
            />
          </div>
        </div>
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∏ (—Ä–µ—Ü–µ–ø—Ç—ã) */}
      <div className='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8'>
        {sortedRecipes.map(recipe => (
          <div
            key={recipe.id}
            onClick={() => navigate(`/recipes/${recipe.id}`)}
            className='w-[300px] group bg-white border border-orange-200 rounded-xl shadow-md
              p-4 flex flex-col items-center relative cursor-pointer
              transition-transform duration-300 ease-out
              hover:-translate-y-1 hover:scale-[1] hover:shadow-2xl
              hover:border-orange-400
              hover:ring-1 hover:ring-orange-200'
          >
            <IconStar
              isFavorite={user?.favorites?.includes(recipe.id) || false}
              onClick={e => {
                e.stopPropagation();
                if (!user) {
                  alert(
                    '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!'
                  );
                  return;
                }
                handleFavorite(recipe.id, user.id);
              }}
              className='absolute bottom-2 right-3 z-10 transition-transform group-hover:scale-108 group-hover:text-orange-400 cursor-pointer'
            />

            <img
              src={recipe.imageUrl}
              alt={recipe.title}
              className='w-[94%] h-44 object-cover rounded-md mb-4 mt-2'
            />

            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ—Ü–µ–ø—Ç–∞ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é */}
            <h2 className='text-lg font-medium text-gray-600 text-center mb-2 text-opacity-70'>
              {recipe.title}
            </h2>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é */}
            <div className='text-sm text-gray-500 text-center space-y-1 text-opacity-70'>
              <p>
                <span className='font-semibold text-orange-400/80'>
                  –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
                </span>{' '}
                {recipe.ingredientCount} —à—Ç.
              </p>
              <p>
                <span className='font-semibold text-orange-400/80'>–í—Ä–µ–º—è:</span>{' '}
                {recipe.cookTime} –º–∏–Ω
              </p>
            </div>
          </div>
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë */}
      {!noMore && sortedRecipes.length > 0 && (
        <div className='mt-10 flex justify-center'>
          <button
            onClick={loadMoreRecipes}
            disabled={loading}
            className='bg-orange-400 text-white px-5 py-2 rounded-lg hover:bg-orange-500 text-lg 
             transform transition-transform duration-200 cursor-pointer'
          >
            {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë'}
          </button>
        </div>
      )}
      {sortedRecipes.length === 0 && !loading && (
        <p className='text-center text-gray-400 mt-6'>
          {filter
            ? '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä.'
            : '–†–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.'}
        </p>
      )}
      {noMore && sortedRecipes.length > 0 && (
        <p className='text-center text-gray-400 mt-6'>–ë–æ–ª—å—à–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–µ—Ç</p>
      )}
    </div>
  );
}

export default MainPage;
