import { useEffect, useState } from "react";
import RecipesApi from "../entities/recipes/RecipesApi";
import { useNavigate } from "react-router";
import IconStar from "../shared/ui/FavoriteIcon/IconStar";
import UserApi from "../entities/user/UserApi";

function MainPage({ user, myUser, setUser }) {
  const [recipes, setRecipes] = useState([]);
  const [page, setPage] = useState(1);
  const [loading, setLoading] = useState(false);
  const [noMore, setNoMore] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    async function getAllRecipesPaginated() {
      try {
        setLoading(true);
        const data = await RecipesApi.getPaginated(1);
        if (data.statusCode === 200) {
          setRecipes(data.data);
          if (data.data.length < 9) setNoMore(true);
        } else {
          console.error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤:", data);
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:", error);
      } finally {
        setLoading(false);
      }
    }

    getAllRecipesPaginated();
  }, []);

  async function loadMoreRecipes() {
    try {
      setLoading(true);
      const nextPage = page + 1;
      let data = await RecipesApi.getPaginated(nextPage);

      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ ‚Äî –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –≤–Ω–µ—à–Ω–µ–≥–æ API
      if (data.statusCode === 200 && data.data.length === 0) {
        console.warn("–†–µ—Ü–µ–ø—Ç–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ API...");
        const loadResult = await RecipesApi.loadFromApi();
        // –ü—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        data = await RecipesApi.getPaginated(nextPage);
      }

      if (data.statusCode === 200) {
        if (data.data.length === 0) {
          setNoMore(true);
        } else {
          setRecipes((prev) => [...prev, ...data.data]);
          setPage(nextPage);
        }
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥—Ä—É–∑–∫–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤:", error);
    } finally {
      setLoading(false);
    }
  }

  async function handleFavorite(recipeId, userId) {
    try {
    if (!user) {
      alert("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!");
      return;
    }

    if (!user.favorites) {
      user.favorites = [];
    }

    let response;
    if (user.favorites.includes(recipeId)) {
      response = await UserApi.removeFavorite(recipeId);
    } else {
      response = await UserApi.addFavorite(recipeId, userId);
    }

    if (response.statusCode === 200 || response.statusCode === 201) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      const updatedUser = { ...user };
      if (user.favorites.includes(recipeId)) {
        updatedUser.favorites = updatedUser.favorites.filter(id => id !== recipeId);
      } else {
        updatedUser.favorites = [...updatedUser.favorites, recipeId];
      }
      setUser(updatedUser);
    } else {
      throw new Error(response.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
    }
  } catch (err) {
    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!");
    console.error(err);
  }
  }

  return (
    <div className="p-4 max-w-l mx-auto">
      <div className="mb-8 text-center">
        <h2 className="text-2xl font-light text-gray-700">
          –ü—Ä–∏–≤–µ—Ç{user?.name ? `, ${user.name}` : ""} üëã
        </h2>
        <p className="text-md text-gray-500">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É–ª–∏–Ω–∞—Ä–Ω—É—é –∫–Ω–∏–≥—É
        </p>
      </div>

      <h1 className="text-4xl font-semibold text-center text-orange-600 mb-10 tracking-tight">
        –†–µ—Ü–µ–ø—Ç—ã
      </h1>

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
        {recipes.map((recipe) => (
          <div
            key={recipe.id}
            onClick={() => navigate(`/recipes/${recipe.id}`)}
            className="bg-white border border-orange-200 rounded-xl shadow-sm hover:shadow-lg transition-all duration-200 p-4 flex flex-col items-center relative"
          >
            <IconStar
              isFavorite={user?.favorites?.includes(recipe.id) || false}
              onClick={(e) => {
                e.stopPropagation();
                if (!user) {
                  alert(
                    "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!"
                  );
                  return;
                }
                handleFavorite(recipe.id, user.id);
              }}
              className="absolute top-2 right-2 z-10"
            />

            <img
              src={recipe.imageUrl}
              alt={recipe.title}
              className="w-full h-44 object-cover rounded-md mb-3"
            />
            <h2 className="text-lg font-medium text-gray-800 text-center mb-2">
              {recipe.title}
            </h2>
            <div className="text-sm text-gray-600 text-center space-y-1">
              <p>
                <span className="font-semibold text-orange-500">
                  –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
                </span>{" "}
                {recipe.ingredientCount}
              </p>
              <p>
                <span className="font-semibold text-orange-500">‚è∞ –í—Ä–µ–º—è:</span>{" "}
                {recipe.cookTime} –º–∏–Ω
              </p>
            </div>
          </div>
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë" */}
      {!noMore && (
        <div className="mt-10 flex justify-center">
          <button
            onClick={loadMoreRecipes}
            disabled={loading}
            className="bg-orange-500 text-white px-6 py-2 rounded-lg hover:bg-orange-600 transition-all disabled:opacity-50"
          >
            {loading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë"}
          </button>
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç */}
      {noMore && (
        <p className="text-center text-gray-400 mt-6">–ë–æ–ª—å—à–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–µ—Ç</p>
      )}
    </div>
  );
}

export default MainPage;
